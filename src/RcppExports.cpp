// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// extractCoverageFromVcf
Rcpp::DataFrame extractCoverageFromVcf(std::string filename, std::string samplename);
RcppExport SEXP _DEploid_utils_extractCoverageFromVcf(SEXP filenameSEXP, SEXP samplenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type samplename(samplenameSEXP);
    rcpp_result_gen = Rcpp::wrap(extractCoverageFromVcf(filename, samplename));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DEploid_utils_extractCoverageFromVcf", (DL_FUNC) &_DEploid_utils_extractCoverageFromVcf, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_DEploid_utils(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
